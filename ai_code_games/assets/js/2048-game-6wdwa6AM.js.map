{"version":3,"file":"2048-game-6wdwa6AM.js","sources":["../../../../src/games/2048/index.tsx","../../../../src/games/2048/history.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { GameState } from './types';\nimport './style.css';\n\ninterface TouchPoint {\n  x: number;\n  y: number;\n}\n\nconst Game2048 = () => {\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [gameState, setGameState] = useState<GameState>({\n    board: Array(4).fill(null).map(() => Array(4).fill(0)),\n    score: 0,\n    history: []\n  });\n  const navigate = useNavigate();\n  const [touchStart, setTouchStart] = useState<TouchPoint | null>(null);\n  const [canvasSize, setCanvasSize] = useState(400);\n\n  // 更新画布大小\n  const updateCanvasSize = useCallback(() => {\n    if (containerRef.current) {\n      const containerWidth = containerRef.current.clientWidth;\n      const maxSize = Math.min(containerWidth - 32, 600); // 32px for padding\n      setCanvasSize(maxSize);\n    }\n  }, []);\n\n  // 监听窗口大小变化\n  useEffect(() => {\n    updateCanvasSize();\n    window.addEventListener('resize', updateCanvasSize);\n    return () => window.removeEventListener('resize', updateCanvasSize);\n  }, [updateCanvasSize]);\n\n  const getTileColor = useCallback((value: number): string => {\n    const colors: { [key: number]: string } = {\n      2: '#eee4da',\n      4: '#ede0c8',\n      8: '#f2b179',\n      16: '#f59563',\n      32: '#f67c5f',\n      64: '#f65e3b',\n      128: '#edcf72',\n      256: '#edcc61',\n      512: '#edc850',\n      1024: '#edc53f',\n      2048: '#edc22e'\n    };\n    return colors[value] || '#cdc1b4';\n  }, []);\n\n  const drawBoard = useCallback(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    const ctx = canvas.getContext('2d');\n    if (!ctx) return;\n\n    // 设置画布大小\n    canvas.style.width = `${canvasSize}px`;\n    canvas.style.height = `${canvasSize}px`;\n    canvas.width = canvasSize;\n    canvas.height = canvasSize;\n\n    const tileSize = (canvasSize - 50) / 4;\n    const padding = 10;\n\n    // 清空画布\n    ctx.fillStyle = '#bbada0';\n    ctx.fillRect(0, 0, canvasSize, canvasSize);\n\n    // 绘制方块\n    for (let i = 0; i < 4; i++) {\n      for (let j = 0; j < 4; j++) {\n        const x = j * (tileSize + padding) + padding;\n        const y = i * (tileSize + padding) + padding;\n        const value = gameState.board[i][j];\n\n        // 绘制方块背景\n        ctx.fillStyle = getTileColor(value);\n        ctx.fillRect(x, y, tileSize, tileSize);\n\n        if (value !== 0) {\n          // 绘制数字\n          ctx.fillStyle = value <= 4 ? '#776e65' : '#f9f6f2';\n          const fontSize = value >= 1024 ? tileSize * 0.3 : tileSize * 0.4;\n          ctx.font = `bold ${fontSize}px Arial`;\n          ctx.textAlign = 'center';\n          ctx.textBaseline = 'middle';\n          ctx.fillText(\n            value.toString(),\n            x + tileSize / 2,\n            y + tileSize / 2\n          );\n        }\n      }\n    }\n  }, [gameState.board, getTileColor, canvasSize]);\n\n  // 初始化游戏\n  const initializeGame = useCallback(() => {\n    const newBoard = Array(4).fill(null).map(() => Array(4).fill(0));\n    addRandomTile(newBoard);\n    addRandomTile(newBoard);\n    setGameState({\n      board: newBoard,\n      score: 0,\n      history: []\n    });\n  }, []);\n\n  // 添加随机方块\n  const addRandomTile = (board: number[][]) => {\n    const emptyCells = [];\n    for (let i = 0; i < 4; i++) {\n      for (let j = 0; j < 4; j++) {\n        if (board[i][j] === 0) {\n          emptyCells.push({ x: i, y: j });\n        }\n      }\n    }\n    if (emptyCells.length > 0) {\n      const randomCell = emptyCells[Math.floor(Math.random() * emptyCells.length)];\n      board[randomCell.x][randomCell.y] = Math.random() < 0.9 ? 2 : 4;\n    }\n  };\n\n  // 移动逻辑\n  const move = useCallback((direction: 'up' | 'down' | 'left' | 'right') => {\n    const newBoard = JSON.parse(JSON.stringify(gameState.board));\n    let moved = false;\n    let newScore = gameState.score;\n\n    const moveLeft = (board: number[][]) => {\n      for (let i = 0; i < 4; i++) {\n        // 1. 移除所有的0，将非0数字集中到一起\n        let row = board[i].filter(x => x !== 0);\n        \n        // 2. 合并相邻的相同数字\n        for (let j = 0; j < row.length - 1; j++) {\n          if (row[j] === row[j + 1]) {\n            row[j] *= 2;\n            newScore += row[j];\n            row.splice(j + 1, 1);\n          }\n        }\n        \n        // 3. 补充0到长度为4\n        while (row.length < 4) {\n          row.push(0);\n        }\n        \n        // 4. 检查是否发生了移动\n        if (JSON.stringify(board[i]) !== JSON.stringify(row)) {\n          moved = true;\n        }\n        \n        // 5. 更新行\n        board[i] = row;\n      }\n    };\n\n    const rotate = (board: number[][], times: number) => {\n      const size = board.length;\n      for (let t = 0; t < times; t++) {\n        // 转置矩阵\n        for (let i = 0; i < size; i++) {\n          for (let j = i + 1; j < size; j++) {\n            [board[i][j], board[j][i]] = [board[j][i], board[i][j]];\n          }\n        }\n        // 反转每一行\n        for (let i = 0; i < size; i++) {\n          board[i].reverse();\n        }\n      }\n    };\n\n    // 通过旋转矩阵来实现四个方向的移动\n    switch (direction) {\n      case 'left':\n        moveLeft(newBoard);\n        break;\n      case 'right':\n        rotate(newBoard, 2);\n        moveLeft(newBoard);\n        rotate(newBoard, 2);\n        break;\n      case 'down':\n        rotate(newBoard, 1);\n        moveLeft(newBoard);\n        rotate(newBoard, 3);\n        break;\n      case 'up':\n        rotate(newBoard, 3);\n        moveLeft(newBoard);\n        rotate(newBoard, 1);\n        break;\n    }\n\n    if (moved) {\n      addRandomTile(newBoard);\n      setGameState(prev => ({\n        board: newBoard,\n        score: newScore,\n        history: [...prev.history, { board: prev.board, score: prev.score }]\n      }));\n    }\n  }, [gameState]);\n\n  // 键盘事件处理\n  useEffect(() => {\n    const handleKeyDown = (e: KeyboardEvent) => {\n      if (e.key.startsWith('Arrow')) {\n        e.preventDefault();\n        switch (e.key) {\n          case 'ArrowUp':\n            move('up');\n            break;\n          case 'ArrowDown':\n            move('down');\n            break;\n          case 'ArrowLeft':\n            move('left');\n            break;\n          case 'ArrowRight':\n            move('right');\n            break;\n        }\n      }\n    };\n\n    window.addEventListener('keydown', handleKeyDown);\n    return () => window.removeEventListener('keydown', handleKeyDown);\n  }, [move]);\n\n  // 触摸事件处理\n  const handleTouchStart = (e: React.TouchEvent) => {\n    const touch = e.touches[0];\n    setTouchStart({ x: touch.clientX, y: touch.clientY });\n  };\n\n  const handleTouchEnd = (e: React.TouchEvent) => {\n    if (!touchStart) return;\n    \n    const touch = e.changedTouches[0];\n    const deltaX = touch.clientX - touchStart.x;\n    const deltaY = touch.clientY - touchStart.y;\n    const minSwipeDistance = 50;\n    \n    if (Math.abs(deltaX) > Math.abs(deltaY)) {\n      if (Math.abs(deltaX) > minSwipeDistance) {\n        move(deltaX > 0 ? 'right' : 'left');\n      }\n    } else {\n      if (Math.abs(deltaY) > minSwipeDistance) {\n        move(deltaY > 0 ? 'down' : 'up');\n      }\n    }\n    \n    setTouchStart(null);\n  };\n\n  // 游戏结束检查\n  const checkGameOver = useCallback(() => {\n    const board = gameState.board;\n    \n    // 检查是否还有空格\n    for (let i = 0; i < 4; i++) {\n      for (let j = 0; j < 4; j++) {\n        if (board[i][j] === 0) return false;\n      }\n    }\n\n    // 检查是否有可合并的相邻数字\n    for (let i = 0; i < 4; i++) {\n      for (let j = 0; j < 3; j++) {\n        if (board[i][j] === board[i][j + 1]) return false;\n        if (board[j][i] === board[j + 1][i]) return false;\n      }\n    }\n\n    return true;\n  }, [gameState.board]);\n\n  // 游戏结束处理\n  useEffect(() => {\n    if (checkGameOver()) {\n      const playerName = prompt('Game Over! Your score: ' + gameState.score + '\\nEnter your name:') || 'Anonymous';\n      const newScore = {\n        playerName,\n        score: gameState.score,\n        date: new Date().toLocaleDateString()\n      };\n      \n      const savedScores = JSON.parse(localStorage.getItem('gameScores') || '[]');\n      localStorage.setItem('gameScores', JSON.stringify([...savedScores, newScore]));\n\n      if (window.confirm('Start a new game?')) {\n        initializeGame();\n      }\n    }\n  }, [gameState.score, checkGameOver, initializeGame]);\n\n  // 初始化和更新游戏界面\n  useEffect(() => {\n    initializeGame();\n  }, [initializeGame]);\n\n  useEffect(() => {\n    drawBoard();\n  }, [drawBoard]);\n\n  return (\n    <div className=\"game-container\" ref={containerRef}>\n      <div className=\"game-header\">\n        <h1>2048</h1>\n        <div className=\"score-container\">\n          <div>Score</div>\n          <div>{gameState.score}</div>\n        </div>\n      </div>\n      <div className=\"game-controls\">\n        <button onClick={initializeGame}>New Game</button>\n        <button onClick={() => navigate('/2048/history')}>History</button>\n        <button onClick={() => navigate('/')}>Back to Home</button>\n      </div>\n      <canvas\n        ref={canvasRef}\n        onTouchStart={handleTouchStart}\n        onTouchEnd={handleTouchEnd}\n        className=\"game-canvas\"\n      />\n    </div>\n  );\n};\n\nexport default Game2048;\n","import { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { ScoreRecord } from './types';\n\nconst History = () => {\n  const [scores, setScores] = useState<ScoreRecord[]>([]);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const savedScores = JSON.parse(localStorage.getItem('gameScores') || '[]');\n    const sortedScores = savedScores.sort((a: ScoreRecord, b: ScoreRecord) => b.score - a.score);\n    setScores(sortedScores);\n  }, []);\n\n  return (\n    <div className=\"container mx-auto p-4 sm:p-8\">\n      <div className=\"flex flex-col sm:flex-row justify-between items-center mb-4 sm:mb-8\">\n        <h1 className=\"text-2xl sm:text-3xl font-bold mb-4 sm:mb-0\">2048 Score History</h1>\n        <button\n          onClick={() => navigate('/2048')}\n          className=\"w-full sm:w-auto px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600\"\n        >\n          Back to Game\n        </button>\n      </div>\n      \n      <div className=\"bg-white rounded-lg shadow overflow-x-auto\">\n        {scores.length === 0 ? (\n          <div className=\"p-6 text-center text-gray-500\">\n            No scores yet. Play a game to set some records!\n          </div>\n        ) : (\n          <div className=\"block sm:hidden\">\n            {scores.map((record, index) => (\n              <div \n                key={index}\n                className={`p-4 border-b ${index < 3 ? 'bg-yellow-50' : ''}`}\n              >\n                <div className=\"flex justify-between items-center mb-2\">\n                  <span className=\"font-bold text-lg\">#{index + 1}</span>\n                  <span className=\"text-xl font-bold text-blue-600\">{record.score}</span>\n                </div>\n                <div className=\"flex justify-between items-center text-sm text-gray-600\">\n                  <span>{record.playerName}</span>\n                  <span>{record.date}</span>\n                </div>\n              </div>\n            ))}\n          </div>\n        )}\n        \n        {scores.length > 0 && (\n          <table className=\"hidden sm:table w-full\">\n            <thead className=\"bg-gray-50\">\n              <tr>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Rank\n                </th>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Player Name\n                </th>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Score\n                </th>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                  Date\n                </th>\n              </tr>\n            </thead>\n            <tbody className=\"bg-white divide-y divide-gray-200\">\n              {scores.map((record, index) => (\n                <tr key={index} className={index < 3 ? 'bg-yellow-50' : ''}>\n                  <td className=\"px-6 py-4 whitespace-nowrap\">\n                    {index + 1}\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap\">\n                    {record.playerName}\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap\">\n                    {record.score}\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap\">\n                    {record.date}\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default History;\n"],"names":["Game2048","canvasRef","useRef","containerRef","gameState","setGameState","useState","navigate","useNavigate","touchStart","setTouchStart","canvasSize","setCanvasSize","updateCanvasSize","useCallback","containerWidth","maxSize","useEffect","getTileColor","value","drawBoard","canvas","ctx","tileSize","padding","i","j","x","y","fontSize","initializeGame","newBoard","addRandomTile","board","emptyCells","randomCell","move","direction","moved","newScore","moveLeft","row","rotate","times","size","t","prev","handleKeyDown","handleTouchStart","e","touch","handleTouchEnd","deltaX","deltaY","minSwipeDistance","checkGameOver","savedScores","jsxs","jsx","History","scores","setScores","sortedScores","a","b","record","index"],"mappings":"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"}