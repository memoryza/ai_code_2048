{"version":3,"file":"pacman-game-CZcDKbj0.js","sources":["../../../src/games/pacman/index.tsx","../../../src/games/pacman/history.tsx"],"sourcesContent":["import React, { useEffect, useRef, useState, useCallback } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { GameState, Direction, Position, Ghost } from './types';\nimport './style.css';\n\nconst CELL_SIZE = 20;\nconst BOARD_WIDTH = 28;\nconst BOARD_HEIGHT = 21;\nconst MOVEMENT_SPEED = 150; // 移动速度（毫秒）\n\n// 优化后的地图模板，确保所有路径都是连通的\nconst MAP_TEMPLATES = [\n  [\n    \"WWWWWWWWWWWWWWWWWWWWWWWWWWWW\",\n    \"W............WW............W\",\n    \"W.WWWW.WWWW.WW.WWWW.WWWW.W\",\n    \"W.WWWW.WWWW.WW.WWWW.WWWW.W\",\n    \"W.........................W\",\n    \"W.WWWW.WW.WWWWWW.WW.WWWW.W\",\n    \"W......WW....WW....WW.....W\",\n    \"WWWWWW.WWWWW.WW.WWWWW.WWWW\",\n    \"W......WW.........WW......W\",\n    \"W.WWWW.WW.WW--WW.WW.WWWW.W\",\n    \"W.WWWW....W    W....WWWW.W\",\n    \"W.WWWW.WW.WWWWWW.WW.WWWW.W\",\n    \"W......WW........WW......W\",\n    \"WWWWWW.WW.WWWWWW.WW.WWWWW\",\n    \"     W....W    W....W     \",\n    \"WWWWWW.WW.W    W.WW.WWWWW\",\n    \"W............WW...........W\",\n    \"W.WWWW.WWWW.WW.WWWW.WWWW.W\",\n    \"W...WW................WW..W\",\n    \"WWW.WW.WW.WWWWWW.WW.WW.WWW\",\n    \"W......WW....WW....WW.....W\",\n    \"W.WWWWWWWWWW.WW.WWWWWWWW.W\",\n    \"W.........................W\",\n    \"WWWWWWWWWWWWWWWWWWWWWWWWWWW\"\n  ],\n  [\n    \"WWWWWWWWWWWWWWWWWWWWWWWWWWWW\",\n    \"W.........................W\",\n    \"W.WWWW.WWWWW.WW.WWWWW.WW.W\",\n    \"W.WWWW.WWWWW.WW.WWWWW.WW.W\",\n    \"W......WW.....WW.........W\",\n    \"WWWWWW.WW.WWW.WW.WWW.WWWWW\",\n    \"W......WW.WWW.WW.WWW.....W\",\n    \"W.WWWW.WW.WWW.WW.WWW.WWWW\",\n    \"W.WWWW...................W\",\n    \"W......WW.WWWWWW.WW.....W\",\n    \"WWWWWW.WW....WW....WWWWWW\",\n    \"W......WW.WW.WW.WW......W\",\n    \"W.WWWW.WW.WW.WW.WW.WWWW.W\",\n    \"W.WWWW....WW.WW....WWWW.W\",\n    \"W......WW.WW.WW.WW......W\",\n    \"WWWWWW.WW....WW....WWWWWW\",\n    \"W......WW.WWWWWW.WW.....W\",\n    \"W.WWWW...................W\",\n    \"W.WWWW.WW.WWW.WW.WWW.WWWW\",\n    \"W......WW.WWW.WW.WWW.....W\",\n    \"WWWWWW.WW.WWW.WW.WWW.WWWWW\",\n    \"W......WW.....WW.........W\",\n    \"W.........................W\",\n    \"WWWWWWWWWWWWWWWWWWWWWWWWWWW\"\n  ]\n];\n\nconst Pacman: React.FC = () => {\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const [gameState, setGameState] = useState<GameState>({\n    board: [],\n    pacman: {\n      position: { x: 14, y: 23 },\n      direction: 'right'\n    },\n    ghosts: [\n      { position: { x: 13, y: 14 }, direction: 'right', color: '#ff0000' },\n      { position: { x: 16, y: 14 }, direction: 'left', color: '#00ffff' }\n    ],\n    score: 0,\n    gameOver: false\n  });\n\n  const navigate = useNavigate();\n  const requestRef = useRef<number>();\n  const lastMoveTime = useRef<number>(0);\n  const [currentDirection, setCurrentDirection] = useState<Direction>('right');\n  const [nextDirection, setNextDirection] = useState<Direction>('right');\n  const [gameStarted, setGameStarted] = useState(false);\n\n  const validateMap = (board: string[][]): boolean => {\n    // 检查是否有豆子\n    let hasDots = false;\n    // 检查每个豆子是否可达\n    const visited = Array(BOARD_HEIGHT).fill(0).map(() => Array(BOARD_WIDTH).fill(false));\n    const queue: Position[] = [];\n    let startPos: Position | null = null;\n\n    // 找到起始位置（第一个不是墙的位置）\n    for (let y = 0; y < BOARD_HEIGHT; y++) {\n      for (let x = 0; x < BOARD_WIDTH; x++) {\n        if (board[y][x] === 'dot') {\n          hasDots = true;\n        }\n        if (board[y][x] !== 'wall' && !startPos) {\n          startPos = { x, y };\n          queue.push({ x, y });\n          visited[y][x] = true;\n        }\n      }\n    }\n\n    if (!hasDots || !startPos) return false;\n\n    // BFS遍历所有可达的位置\n    const directions = [[-1, 0], [1, 0], [0, -1], [0, 1]];\n    while (queue.length > 0) {\n      const current = queue.shift()!;\n      \n      for (const [dx, dy] of directions) {\n        const newX = current.x + dx;\n        const newY = current.y + dy;\n        \n        if (newX >= 0 && newX < BOARD_WIDTH && \n            newY >= 0 && newY < BOARD_HEIGHT && \n            !visited[newY][newX] && \n            board[newY][newX] !== 'wall') {\n          queue.push({ x: newX, y: newY });\n          visited[newY][newX] = true;\n        }\n      }\n    }\n\n    // 检查所有豆子是否都可达\n    for (let y = 0; y < BOARD_HEIGHT; y++) {\n      for (let x = 0; x < BOARD_WIDTH; x++) {\n        if (board[y][x] === 'dot' && !visited[y][x]) {\n          return false;\n        }\n      }\n    }\n\n    return true;\n  };\n\n  const initializeGame = useCallback(() => {\n    let validMap = false;\n    let board: string[][] = [];\n    let selectedMap: string[] = [];\n\n    // 尝试生成有效的地图\n    while (!validMap) {\n      selectedMap = MAP_TEMPLATES[Math.floor(Math.random() * MAP_TEMPLATES.length)];\n      board = selectedMap.map(row => \n        row.split('').map(cell => {\n          if (cell === '.') return 'dot';\n          if (cell === 'W') return 'wall';\n          return 'empty';\n        })\n      );\n\n      validMap = validateMap(board);\n    }\n\n    // 找到一个有效的初始位置（不在墙上且靠近底部）\n    let initialPacmanPos = { x: 14, y: BOARD_HEIGHT - 2 };\n    while (board[initialPacmanPos.y][initialPacmanPos.x] === 'wall') {\n      initialPacmanPos.y--;\n      if (initialPacmanPos.y < 0) {\n        initialPacmanPos = { x: Math.floor(BOARD_WIDTH / 2), y: BOARD_HEIGHT - 2 };\n      }\n    }\n\n    // 为幽灵找到有效的初始位置\n    const getValidGhostPosition = (): Position => {\n      let pos = { \n        x: Math.floor(BOARD_WIDTH / 2), \n        y: Math.floor(BOARD_HEIGHT / 2) \n      };\n      \n      while (board[pos.y][pos.x] === 'wall') {\n        pos.x = Math.floor(Math.random() * (BOARD_WIDTH - 2)) + 1;\n        pos.y = Math.floor(BOARD_HEIGHT / 2);\n      }\n      return pos;\n    };\n\n    const ghost1Pos = getValidGhostPosition();\n    const ghost2Pos = getValidGhostPosition();\n\n    setGameState({\n      board,\n      pacman: {\n        position: initialPacmanPos,\n        direction: 'right'\n      },\n      ghosts: [\n        { position: ghost1Pos, direction: 'right', color: '#ff0000' },\n        { position: ghost2Pos, direction: 'left', color: '#00ffff' }\n      ],\n      score: 0,\n      gameOver: false\n    });\n    \n    setCurrentDirection('right');\n    setNextDirection('right');\n    lastMoveTime.current = Date.now();\n  }, []);\n\n  const canMove = useCallback((position: Position, direction: Direction): boolean => {\n    const nextPos = { ...position };\n    switch (direction) {\n      case 'up':\n        nextPos.y -= 1;\n        break;\n      case 'down':\n        nextPos.y += 1;\n        break;\n      case 'left':\n        nextPos.x -= 1;\n        break;\n      case 'right':\n        nextPos.x += 1;\n        break;\n    }\n    \n    // 检查是否超出边界\n    if (nextPos.x < 0 || nextPos.x >= BOARD_WIDTH || \n        nextPos.y < 0 || nextPos.y >= BOARD_HEIGHT) {\n      return false;\n    }\n    \n    // 检查下一个位置是否是墙\n    return gameState.board[nextPos.y][nextPos.x] !== 'wall';\n  }, [gameState.board]);\n\n  const moveCharacter = useCallback((position: Position, direction: Direction): Position => {\n    let newPosition = { ...position };\n    \n    switch (direction) {\n      case 'up':\n        newPosition.y = (newPosition.y - 1 + BOARD_HEIGHT) % BOARD_HEIGHT;\n        break;\n      case 'down':\n        newPosition.y = (newPosition.y + 1) % BOARD_HEIGHT;\n        break;\n      case 'left':\n        newPosition.x = (newPosition.x - 1 + BOARD_WIDTH) % BOARD_WIDTH;\n        break;\n      case 'right':\n        newPosition.x = (newPosition.x + 1) % BOARD_WIDTH;\n        break;\n    }\n\n    // Check if the new position is a wall\n    if (gameState.board[newPosition.y][newPosition.x] === 'wall') {\n      return position;\n    }\n\n    return newPosition;\n  }, [gameState.board]);\n\n  const handleKeyDown = useCallback((e: KeyboardEvent) => {\n    if (!gameState.gameOver) {\n      switch (e.key) {\n        case 'ArrowUp':\n        case 'w':\n        case 'W':\n          setNextDirection('up');\n          if (!gameStarted) setGameStarted(true);\n          break;\n        case 'ArrowDown':\n        case 's':\n        case 'S':\n          setNextDirection('down');\n          if (!gameStarted) setGameStarted(true);\n          break;\n        case 'ArrowLeft':\n        case 'a':\n        case 'A':\n          setNextDirection('left');\n          if (!gameStarted) setGameStarted(true);\n          break;\n        case 'ArrowRight':\n        case 'd':\n        case 'D':\n          setNextDirection('right');\n          if (!gameStarted) setGameStarted(true);\n          break;\n      }\n    }\n  }, [gameState.gameOver, gameStarted]);\n\n  const handleTouchStart = useCallback((e: React.TouchEvent) => {\n    if (gameState.gameOver) return;\n    \n    const touch = e.touches[0];\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    const rect = canvas.getBoundingClientRect();\n    const x = touch.clientX - rect.left;\n    const y = touch.clientY - rect.top;\n    const centerX = canvas.width / 2;\n    const centerY = canvas.height / 2;\n\n    const deltaX = x - centerX;\n    const deltaY = y - centerY;\n\n    let newDirection: Direction;\n    if (Math.abs(deltaX) > Math.abs(deltaY)) {\n      newDirection = deltaX > 0 ? 'right' : 'left';\n    } else {\n      newDirection = deltaY > 0 ? 'down' : 'up';\n    }\n\n    setNextDirection(newDirection);\n    if (!gameStarted) setGameStarted(true);\n  }, [gameState.gameOver, gameStarted]);\n\n  const handleTouchMove = useCallback((e: React.TouchEvent) => {\n    if (!touchStart || gameState.gameOver) return;\n    \n    const touch = e.touches[0];\n    const deltaX = touch.clientX - touchStart.x;\n    const deltaY = touch.clientY - touchStart.y;\n    \n    if (Math.abs(deltaX) > 30 || Math.abs(deltaY) > 30) {\n      if (Math.abs(deltaX) > Math.abs(deltaY)) {\n        setNextDirection(deltaX > 0 ? 'right' : 'left');\n      } else {\n        setNextDirection(deltaY > 0 ? 'down' : 'up');\n      }\n      if (!gameStarted) setGameStarted(true);\n      setTouchStart(null);\n    }\n  }, [gameState.gameOver, gameStarted]);\n\n  const handleTouchEnd = useCallback(() => {\n    setTouchStart(null);\n  }, []);\n\n  const updateGame = useCallback(() => {\n    if (!gameState.gameOver && gameStarted) {\n      const currentTime = Date.now();\n      const timeSinceLastMove = currentTime - lastMoveTime.current;\n\n      if (timeSinceLastMove >= MOVEMENT_SPEED) {\n        setGameState(prev => {\n          if (!prev.pacman) return prev; // 防止pacman未定义\n\n          // 检查是否可以向预期方向移动\n          const canMoveNext = canMove(prev.pacman.position, nextDirection);\n          // 检查是否可以继续当前方向\n          const canMoveCurrent = canMove(prev.pacman.position, currentDirection);\n\n          // 决定实际移动方向\n          const actualDirection = canMoveNext ? nextDirection : \n                                canMoveCurrent ? currentDirection : \n                                prev.pacman.direction;\n\n          // 计算新位置\n          const newPacmanPos = moveCharacter(prev.pacman.position, actualDirection);\n          \n          let newScore = prev.score;\n          const newBoard = [...prev.board];\n          if (newBoard[newPacmanPos.y][newPacmanPos.x] === 'dot') {\n            newBoard[newPacmanPos.y][newPacmanPos.x] = 'empty';\n            newScore += 10;\n          }\n\n          // 移动幽灵\n          const newGhosts = prev.ghosts.map(ghost => {\n            const newPos = moveCharacter(ghost.position, ghost.direction);\n            if (Math.random() < 0.1) {\n              const availableDirections = ['up', 'down', 'left', 'right'].filter(dir => \n                canMove(ghost.position, dir as Direction)\n              );\n              if (availableDirections.length > 0) {\n                ghost.direction = availableDirections[Math.floor(Math.random() * availableDirections.length)] as Direction;\n              }\n            }\n            return { ...ghost, position: newPos };\n          });\n\n          // 检查碰撞\n          const collision = newGhosts.some(ghost => \n            ghost.position.x === newPacmanPos.x && ghost.position.y === newPacmanPos.y\n          );\n\n          if (collision) {\n            const history = JSON.parse(localStorage.getItem('pacmanHistory') || '[]');\n            history.push({\n              score: newScore,\n              date: new Date().toLocaleString()\n            });\n            localStorage.setItem('pacmanHistory', JSON.stringify(history));\n            return { ...prev, gameOver: true };\n          }\n\n          lastMoveTime.current = currentTime;\n          setCurrentDirection(actualDirection);\n\n          return {\n            ...prev,\n            board: newBoard,\n            score: newScore,\n            pacman: {\n              position: newPacmanPos,\n              direction: actualDirection\n            },\n            ghosts: newGhosts\n          };\n        });\n      }\n    }\n  }, [gameState.gameOver, nextDirection, currentDirection, canMove, moveCharacter, gameStarted]);\n\n  const draw = useCallback(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas?.getContext('2d');\n    if (!canvas || !ctx) return;\n\n    // 清空画布\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n    // 绘制游戏板\n    gameState.board.forEach((row, y) => {\n      row.forEach((cell, x) => {\n        if (cell === 'wall') {\n          ctx.fillStyle = '#2121DE';\n          ctx.fillRect(x * CELL_SIZE, y * CELL_SIZE, CELL_SIZE, CELL_SIZE);\n        } else if (cell === 'dot') {\n          ctx.fillStyle = '#FFFF00';\n          ctx.beginPath();\n          ctx.arc(\n            x * CELL_SIZE + CELL_SIZE / 2,\n            y * CELL_SIZE + CELL_SIZE / 2,\n            CELL_SIZE / 8,\n            0,\n            Math.PI * 2\n          );\n          ctx.fill();\n        }\n      });\n    });\n\n    // 绘制吃豆人\n    ctx.fillStyle = '#FFFF00';\n    ctx.beginPath();\n    const pacmanX = gameState.pacman.position.x * CELL_SIZE + CELL_SIZE / 2;\n    const pacmanY = gameState.pacman.position.y * CELL_SIZE + CELL_SIZE / 2;\n    const mouthAngle = 0.2 * Math.PI;\n    let startAngle = 0;\n    let endAngle = 2 * Math.PI;\n\n    // 根据方向调整吃豆人的朝向\n    switch (gameState.pacman.direction) {\n      case 'right':\n        startAngle = mouthAngle;\n        endAngle = 2 * Math.PI - mouthAngle;\n        break;\n      case 'left':\n        startAngle = Math.PI + mouthAngle;\n        endAngle = Math.PI - mouthAngle;\n        break;\n      case 'up':\n        startAngle = Math.PI * 1.5 + mouthAngle;\n        endAngle = Math.PI * 1.5 - mouthAngle;\n        break;\n      case 'down':\n        startAngle = Math.PI * 0.5 + mouthAngle;\n        endAngle = Math.PI * 0.5 - mouthAngle;\n        break;\n    }\n\n    ctx.arc(pacmanX, pacmanY, CELL_SIZE / 2, startAngle, endAngle);\n    ctx.lineTo(pacmanX, pacmanY);\n    ctx.fill();\n\n    // 绘制幽灵\n    gameState.ghosts.forEach(ghost => {\n      ctx.fillStyle = ghost.color;\n      ctx.beginPath();\n      const ghostX = ghost.position.x * CELL_SIZE + CELL_SIZE / 2;\n      const ghostY = ghost.position.y * CELL_SIZE + CELL_SIZE / 2;\n      \n      // 绘制幽灵身体\n      ctx.arc(ghostX, ghostY - CELL_SIZE / 4, CELL_SIZE / 2, Math.PI, 0, false);\n      ctx.lineTo(ghostX + CELL_SIZE / 2, ghostY + CELL_SIZE / 4);\n      \n      // 绘制波浪形底部\n      for (let i = 0; i < 3; i++) {\n        const curve = CELL_SIZE / 6;\n        ctx.quadraticCurveTo(\n          ghostX + CELL_SIZE / 2 - curve * (2 - i),\n          ghostY + CELL_SIZE / 4 + curve,\n          ghostX + CELL_SIZE / 2 - curve * (3 - i),\n          ghostY + CELL_SIZE / 4\n        );\n      }\n      \n      ctx.lineTo(ghostX - CELL_SIZE / 2, ghostY + CELL_SIZE / 4);\n      ctx.fill();\n\n      // 绘制眼睛\n      ctx.fillStyle = 'white';\n      ctx.beginPath();\n      ctx.arc(ghostX - CELL_SIZE / 4, ghostY - CELL_SIZE / 4, CELL_SIZE / 6, 0, Math.PI * 2);\n      ctx.arc(ghostX + CELL_SIZE / 4, ghostY - CELL_SIZE / 4, CELL_SIZE / 6, 0, Math.PI * 2);\n      ctx.fill();\n\n      // 绘制瞳孔\n      ctx.fillStyle = 'blue';\n      ctx.beginPath();\n      ctx.arc(ghostX - CELL_SIZE / 4, ghostY - CELL_SIZE / 4, CELL_SIZE / 10, 0, Math.PI * 2);\n      ctx.arc(ghostX + CELL_SIZE / 4, ghostY - CELL_SIZE / 4, CELL_SIZE / 10, 0, Math.PI * 2);\n      ctx.fill();\n    });\n\n    // 如果游戏结束，显示游戏结束文字\n    if (gameState.gameOver) {\n      ctx.fillStyle = 'rgba(0, 0, 0, 0.7)';\n      ctx.fillRect(0, 0, canvas.width, canvas.height);\n      \n      ctx.font = '48px Arial';\n      ctx.fillStyle = 'white';\n      ctx.textAlign = 'center';\n      ctx.textBaseline = 'middle';\n      ctx.fillText('Game Over!', canvas.width / 2, canvas.height / 2 - 30);\n      \n      ctx.font = '24px Arial';\n      ctx.fillText(`Score: ${gameState.score}`, canvas.width / 2, canvas.height / 2 + 30);\n    }\n  }, [gameState]);\n\n  useEffect(() => {\n    const handleKeyDown = (e: KeyboardEvent) => {\n      if (!gameState.gameOver) {\n        switch (e.key) {\n          case 'ArrowUp':\n          case 'w':\n          case 'W':\n            setNextDirection('up');\n            if (!gameStarted) setGameStarted(true);\n            break;\n          case 'ArrowDown':\n          case 's':\n          case 'S':\n            setNextDirection('down');\n            if (!gameStarted) setGameStarted(true);\n            break;\n          case 'ArrowLeft':\n          case 'a':\n          case 'A':\n            setNextDirection('left');\n            if (!gameStarted) setGameStarted(true);\n            break;\n          case 'ArrowRight':\n          case 'd':\n          case 'D':\n            setNextDirection('right');\n            if (!gameStarted) setGameStarted(true);\n            break;\n        }\n      }\n    };\n\n    window.addEventListener('keydown', handleKeyDown);\n    return () => window.removeEventListener('keydown', handleKeyDown);\n  }, [gameState.gameOver, gameStarted]);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (canvas) {\n      canvas.width = BOARD_WIDTH * CELL_SIZE;\n      canvas.height = BOARD_HEIGHT * CELL_SIZE;\n    }\n    initializeGame();\n  }, [initializeGame]);\n\n  useEffect(() => {\n    let animationFrameId: number;\n\n    const gameLoop = () => {\n      if (!gameState.gameOver && gameStarted) {\n        const now = Date.now();\n        if (now - lastMoveTime.current >= MOVEMENT_SPEED) {\n          updateGame();\n          lastMoveTime.current = now;\n        }\n      }\n      draw();\n      animationFrameId = requestAnimationFrame(gameLoop);\n    };\n\n    animationFrameId = requestAnimationFrame(gameLoop);\n    return () => cancelAnimationFrame(animationFrameId);\n  }, [updateGame, draw, gameState, gameStarted]);\n\n  return (\n    <div className=\"pacman-container\">\n      <div className=\"game-header\">\n        <h1>Pacman</h1>\n        <div className=\"score-container\">\n          <div className=\"score-box\">Score: {gameState.score}</div>\n        </div>\n      </div>\n\n      <div className=\"game-area\">\n        <canvas \n          ref={canvasRef} \n          className=\"game-canvas\" \n          onTouchStart={handleTouchStart}\n          onTouchMove={handleTouchMove}\n          onTouchEnd={handleTouchEnd}\n        />\n        {gameState.gameOver && (\n          <div className=\"game-over\">\n            <h2>Game Over!</h2>\n            <p>Score: {gameState.score}</p>\n          </div>\n        )}\n      </div>\n\n      <div className=\"game-controls\">\n        <button onClick={() => { initializeGame(); setGameStarted(false); }}>New Game</button>\n        <button onClick={() => navigate('/pacman/history')}>History</button>\n        <button onClick={() => navigate('/')}>Back to Home</button>\n      </div>\n    </div>\n  );\n};\n\nexport default Pacman;\n","import React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { GameHistory } from './types';\n\nconst PacmanHistory: React.FC = () => {\n  const [history, setHistory] = useState<GameHistory[]>([]);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const savedHistory = localStorage.getItem('pacmanHistory');\n    if (savedHistory) {\n      setHistory(JSON.parse(savedHistory));\n    }\n  }, []);\n\n  return (\n    <div className=\"min-h-screen bg-black py-8 px-4 text-white\">\n      <div className=\"max-w-4xl mx-auto\">\n        <div className=\"flex justify-between items-center mb-8\">\n          <h1 className=\"text-3xl font-bold\">Pacman History</h1>\n          <button\n            onClick={() => navigate('/pacman')}\n            className=\"px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-500\"\n          >\n            Back to Game\n          </button>\n        </div>\n\n        <div className=\"bg-gray-800 rounded-lg shadow overflow-hidden\">\n          <table className=\"min-w-full\">\n            <thead>\n              <tr className=\"border-b border-gray-700\">\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-400 uppercase tracking-wider\">\n                  Date\n                </th>\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-400 uppercase tracking-wider\">\n                  Score\n                </th>\n              </tr>\n            </thead>\n            <tbody className=\"divide-y divide-gray-700\">\n              {history.map((record, index) => (\n                <tr key={index}>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm\">\n                    {record.date}\n                  </td>\n                  <td className=\"px-6 py-4 whitespace-nowrap text-sm\">\n                    {record.score}\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default PacmanHistory;\n"],"names":["CELL_SIZE","BOARD_WIDTH","BOARD_HEIGHT","MOVEMENT_SPEED","MAP_TEMPLATES","Pacman","canvasRef","useRef","gameState","setGameState","useState","navigate","useNavigate","lastMoveTime","currentDirection","setCurrentDirection","nextDirection","setNextDirection","gameStarted","setGameStarted","validateMap","board","hasDots","visited","queue","startPos","y","x","directions","current","dx","dy","newX","newY","initializeGame","useCallback","validMap","selectedMap","row","cell","initialPacmanPos","getValidGhostPosition","pos","ghost1Pos","ghost2Pos","canMove","position","direction","nextPos","moveCharacter","newPosition","e","handleTouchStart","touch","canvas","rect","centerX","centerY","deltaX","deltaY","newDirection","handleTouchMove","handleTouchEnd","updateGame","currentTime","prev","canMoveNext","canMoveCurrent","actualDirection","newPacmanPos","newScore","newBoard","newGhosts","ghost","newPos","availableDirections","dir","history","draw","ctx","pacmanX","pacmanY","mouthAngle","startAngle","endAngle","ghostX","ghostY","i","curve","useEffect","handleKeyDown","animationFrameId","gameLoop","now","jsxs","jsx","PacmanHistory","setHistory","savedHistory","record","index"],"mappings":"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"}